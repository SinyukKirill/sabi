<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>sabi-parent</artifactId>
        <groupId>de.bluewhale</groupId>
        <version>1.0-SNAPSHOT</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>sabi-server</artifactId>
    <packaging>war</packaging>
    <description>Backend consistent of Internal CRUD Services which will be used by the REST service orchestration</description>

    <dependencies>

        <dependency>
            <groupId>de.bluewhale</groupId>
            <artifactId>sabi-boundary</artifactId>
            <version>${sabi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>commons-logging</artifactId>
                    <groupId>commons-logging</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>5.0.1.Final</version>
        </dependency>

        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>1.2.0</version>
        </dependency>

        <!-- New spring abstraction layer...
             to eliminate CRUD boilerplate code
             Not yet! Sticks to Spring 4.0.9.RELEASE and we are using 4.2.x
             So maby later...
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>1.8.2.RELEASE</version>
        </dependency>-->

        <!-- TODO StS: Logging-Strategy slf4j? -->
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
            <version>1.2</version>
        </dependency>

<!--        <dependency>
            <groupId>javax</groupId>
            <artifactId>javaee-api</artifactId>
        </dependency>-->


        <!-- Test dependencies -->

        <!--
            todo: Ggf. hsqldb zum test nehmen, dann muss die jndi.properties entsprechend angepasst werden.
            <dependency>
                   <groupId>org.hsqldb</groupId>
                   <artifactId>hsqldb</artifactId>
                   <version>2.3.3</version>
                   <scope>test</scope>
               </dependency>
               -->

<!--
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>1.2.6.RELEASE</version>
            <scope>test</scope>
        </dependency>
-->

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>sabi-backend</finalName>

        <plugins>
            <!-- clean extension for war:inplace -->
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <configuration>
                    <filesets>
                        <fileset>
                            <directory>src/main/webapp/WEB-INF/classes</directory>
                        </fileset>
                        <fileset>
                            <directory>src/main/webapp/WEB-INF/lib</directory>
                        </fileset>
                    </filesets>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webappDirectory>src/main/webapp</webappDirectory>
                </configuration>
            </plugin>
        </plugins>

    </build>

</project>